labels = c(names(breaks)), right = FALSE)
n_suffix[is.na(n_suffix)] <- ""
suffix <- paste0(sep, n_suffix, unit)
scale <- 1/breaks[n_suffix]
scale[which(scale %in% c(Inf, NA))] <- 1
number(x, accuracy = accuracy, scale = unname(scale), suffix = suffix,
...)
}
f(42423424)
f
f = function (x, unit = 'g', sep = ' ')
{
breaks <- c(0, 10^c(k = 3, M = 6, G = 9, T = 12, P = 15, E = 18))
n_suffix <- cut(abs(x), breaks = c(unname(breaks), Inf), labels = c(names(breaks)), right = FALSE)
n_suffix[is.na(n_suffix)] <- ""
suffix <- paste0(sep, n_suffix, unit)
scale <- 1/breaks[n_suffix]
scale[which(scale %in% c(Inf, NA))] <- 1
number(x, accuracy = accuracy, scale = unname(scale), suffix = suffix,
...)
}
f(42423424)
f
f(42423424)
f = function (x, unit = 'g', sep = ' ', ...)
{
breaks <- c(0, 10^c(k = 3, M = 6, G = 9, T = 12, P = 15, E = 18))
n_suffix <- cut(abs(x), breaks = c(unname(breaks), Inf), labels = c(names(breaks)), right = FALSE)
n_suffix[is.na(n_suffix)] <- ""
suffix <- paste0(sep, n_suffix, unit)
scale <- 1/breaks[n_suffix]
scale[which(scale %in% c(Inf, NA))] <- 1
number(x, accuracy = accuracy, scale = unname(scale), suffix = suffix, ...)
}
f(42423424)
f = function (x, accuracy, unit, sep = ' ', ...)
{
breaks <- c(0, 10^c(k = 3, M = 6, G = 9, T = 12, P = 15, E = 18))
n_suffix <- cut(abs(x), breaks = c(unname(breaks), Inf), labels = c(names(breaks)), right = FALSE)
n_suffix[is.na(n_suffix)] <- ""
suffix <- paste0(sep, n_suffix, unit)
scale <- 1/breaks[n_suffix]
scale[which(scale %in% c(Inf, NA))] <- 1
number(x, accuracy = accuracy, scale = unname(scale), suffix = suffix, ...)
}
f(42423424)
f(42423424, 0.01, 'g')
f = function (x, sigfig=2, unit, sep = ' ', ...)
{
breaks <- c(0, 10^c(k = 3, M = 6, G = 9, T = 12, P = 15, E = 18))
n_suffix <- cut(abs(x), breaks = c(unname(breaks), Inf), labels = c(names(breaks)), right = FALSE)
n_suffix[is.na(n_suffix)] <- ""
suffix <- paste0(sep, n_suffix, unit)
scale <- 1/breaks[n_suffix]
scale[which(scale %in% c(Inf, NA))] <- 1
# number(x, accuracy = accuracy, scale = unname(scale), suffix = suffix, ...)
x = signif(x * scale, sigfig)
}
f(42423424, 'g')
f
f = function (x,  unit, sigfig=2, sep = ' ', ...)
{
breaks <- c(0, 10^c(k = 3, M = 6, G = 9, T = 12, P = 15, E = 18))
n_suffix <- cut(abs(x), breaks = c(unname(breaks), Inf), labels = c(names(breaks)), right = FALSE)
n_suffix[is.na(n_suffix)] <- ""
suffix <- paste0(sep, n_suffix, unit)
scale <- 1/breaks[n_suffix]
scale[which(scale %in% c(Inf, NA))] <- 1
# number(x, accuracy = accuracy, scale = unname(scale), suffix = suffix, ...)
x = signif(x * scale, sigfig)
}
f(42423424, 'g')
print(x)
f = function (x,  unit, sigfig=2, sep = ' ', ...)
{
breaks <- c(0, 10^c(k = 3, M = 6, G = 9, T = 12, P = 15, E = 18))
n_suffix <- cut(abs(x), breaks = c(unname(breaks), Inf), labels = c(names(breaks)), right = FALSE)
n_suffix[is.na(n_suffix)] <- ""
suffix <- paste0(sep, n_suffix, unit)
scale <- 1/breaks[n_suffix]
scale[which(scale %in% c(Inf, NA))] <- 1
# number(x, accuracy = accuracy, scale = unname(scale), suffix = suffix, ...)
x = signif(x * scale, sigfig)
print(x)
}
f(42423424, 'g')
f = function (x,  unit, sigfig=2, sep = ' ', ...)
{
breaks <- c(0, 10^c(k = 3, M = 6, G = 9, T = 12, P = 15, E = 18))
n_suffix <- cut(abs(x), breaks = c(unname(breaks), Inf), labels = c(names(breaks)), right = FALSE)
n_suffix[is.na(n_suffix)] <- ""
suffix <- paste0(sep, n_suffix, unit)
scale <- 1/breaks[n_suffix]
scale[which(scale %in% c(Inf, NA))] <- 1
# number(x, accuracy = accuracy, scale = unname(scale), suffix = suffix, ...)
x = signif(x * scale, sigfig)
paste0(x, suffix)
}
f(42423424, 'g')
f(c(342,2353234523,2345,42423424), 'g')
f(c(342, 2353234523, 2345, 42423424), 'g')
f = function (x,  unit, sigfig=2, sep = ' ', ...)
{
breaks <- c(0, 10^c(m = -3, k = 3, M = 6, G = 9, T = 12, P = 15, E = 18))
n_suffix <- cut(abs(x), breaks = c(unname(breaks), Inf), labels = c(names(breaks)), right = FALSE)
n_suffix[is.na(n_suffix)] <- ""
suffix <- paste0(sep, n_suffix, unit)
scale <- 1/breaks[n_suffix]
scale[which(scale %in% c(Inf, NA))] <- 1
x = signif(x * scale, sigfig)
paste0(x, suffix)
}
f(c(342, 2353234523, 2345, 42423424), 'g')
f = function (x,  unit, sigfig=2, sep = ' ', ...)
{
breaks <- c(0, 10^c(m = -3, 0, k = 3, M = 6, G = 9, T = 12, P = 15, E = 18))
n_suffix <- cut(abs(x), breaks = c(unname(breaks), Inf), labels = c(names(breaks)), right = FALSE)
n_suffix[is.na(n_suffix)] <- ""
suffix <- paste0(sep, n_suffix, unit)
scale <- 1/breaks[n_suffix]
scale[which(scale %in% c(Inf, NA))] <- 1
x = signif(x * scale, sigfig)
paste0(x, suffix)
}
f(c(342, 2353234523, 2345, 42423424), 'g')
f(0.01, 'g')
f(c(0.0123, 342, 2353234523, 2345, 42423424), 'g')
f(c(0.0123, 342, 2353234523, 2345, 42423424), 'g', sigfig = 4)
f(c(0.0123, 342, 2353234523, 2345, 42423424), 'g')
f(c(0.0123, 342, 2353234523, 2345, 4243323424), 'g')
f(c(0.0123, 342, 2353234523, 2345, 424333424), 'g')
breaks <- c(0, 10^c(m = -3, 0, k = 3, M = 6, G = 9, T = 12, P = 15, E = 18))
breaks
breaks <- c(10^c(m = -3, 0, k = 3, M = 6, G = 9, T = 12, P = 15, E = 18))
breaks
f = function (x,  unit, sigfig=2, sep = ' ', ...)
{
breaks <- c(10^c(m = -3, 0, k = 3, M = 6, G = 9, T = 12, P = 15, E = 18))
n_suffix <- cut(abs(x), breaks = c(unname(breaks), Inf), labels = c(names(breaks)), right = FALSE)
n_suffix[is.na(n_suffix)] <- ""
suffix <- paste0(sep, n_suffix, unit)
scale <- 1/breaks[n_suffix]
scale[which(scale %in% c(Inf, NA))] <- 1
x = signif(x * scale, sigfig)
paste0(x, suffix)
}
f(c(0.0123, 342, 2353234523, 2345, 42423424), 'g')
f(c(0.0123, 342, 2353234523, 2345, 42423424), 'g', sigfig = 4)
f(c(0.0123, 342, 2353234523, 2345, 424234234), 'g', sigfig = 4)
f(c(0.0123, 342, 2353234523, 2345, 4242334234), 'g', sigfig = 4)
f(c(0.0123, 342, 2353234523, 2345, 4242334234), 'g', sigfig = 3)
f(c(0.0123, 342, 2353234523, 2345, 42423234), 'g', sigfig = 3)
f = function (x,  unit, sigfig=2, sep = ' ')
{
breaks <- c(10^c(m = -3, 0, k = 3, M = 6, G = 9, T = 12, P = 15, E = 18))
n_suffix <- cut(abs(x), breaks = c(unname(breaks), Inf), labels = c(names(breaks)), right = FALSE)
n_suffix[is.na(n_suffix)] <- ""
suffix <- paste0(sep, n_suffix, unit)
scale <- 1/breaks[n_suffix]
scale[which(scale %in% c(Inf, NA))] <- 1
x = signif(x * scale, sigfig)
paste0(x, suffix)
}
f(c(0.0123, 342, 2353234523, 2345, 42423234), 'g', sigfig = 3)
f = function (x,  unit, sigfig=2, sep = ' ')
{
breaks <- c(10^c(`μ` = -6  m = -3, 0, k = 3, M = 6, G = 9, T = 12, P = 15, E = 18))
n_suffix <- cut(abs(x), breaks = c(unname(breaks), Inf), labels = c(names(breaks)), right = FALSE)
# n_suffix[is.na(n_suffix)] <- ""
suffix <- paste0(sep, n_suffix, unit)
scale <- 1/breaks[n_suffix]
scale[which(scale %in% c(Inf, NA))] <- 1
x = signif(x * scale, sigfig)
paste0(x, suffix)
}
f = function (x,  unit, sigfig=2, sep = ' ')
{
breaks <- c(10^c(`μ` = -6,  m = -3, 0, k = 3, M = 6, G = 9, T = 12, P = 15, E = 18))
n_suffix <- cut(abs(x), breaks = c(unname(breaks), Inf), labels = c(names(breaks)), right = FALSE)
# n_suffix[is.na(n_suffix)] <- ""
suffix <- paste0(sep, n_suffix, unit)
scale <- 1/breaks[n_suffix]
scale[which(scale %in% c(Inf, NA))] <- 1
x = signif(x * scale, sigfig)
paste0(x, suffix)
}
f(c(0.0123, 342, 2353234523, 2345, 42423234), 'g', sigfig = 3)
f(c(0.0001123, 0.0123, 342, 2353234523, 2345, 42423234), 'g', sigfig = 3)
f(c(0.0001011, 0.0123, 342, 2353234523, 2345, 42423234), 'g', sigfig = 3)
f = function (x,  unit, sigfig=2, sep = ' ') {
breaks <- c(10^c(n = -9, `μ` = -6,  m = -3, 0, k = 3, M = 6, G = 9, T = 12, P = 15, E = 18))
n_suffix <- cut(abs(x), breaks = c(unname(breaks), Inf), labels = c(names(breaks)), right = FALSE)
# n_suffix[is.na(n_suffix)] <- ""
suffix <- paste0(sep, n_suffix, unit)
scale <- 1/breaks[n_suffix]
scale[which(scale %in% c(Inf, NA))] <- 1
x = signif(x * scale, sigfig)
paste0(x, suffix)
}
f(c(0.0001011, 0.0123, 342, 2353234523, 2345, 42423234), 'g', sigfig = 3)
f(5.444e7, 'g')
f(c(0.0001011, 5.444e7, 0.0123, 342, 2353234523, 2345, 42423234), 'g', sigfig = 3)
f(c(0.0001011, 5.444e7, 0.0123, 342, 2353234523, 2345, 42423234), 'g', sigfig = 2)
f = function (x,  unit, sigfig=2, sep = ' ') {
breaks <- c(10^c(n = -9, `μ` = -6,  m = -3, 0, k = 3, M = 6, G = 9, T = 12, P = 15, E = 18))
n_suffix <- cut(abs(x), breaks = c(unname(breaks), Inf), labels = c(names(breaks)), right = FALSE)
n_suffix[is.na(n_suffix)] <- ""
suffix <- paste0(sep, n_suffix, unit)
scale <- 1/breaks[n_suffix]
scale[which(scale %in% c(Inf, NA))] <- 1
x <- signif(x * scale, sigfig)
paste0(x, suffix)
}
f(c(0.0001011, 5.444e7, 0.0123, 342, 2353234523, 2345, 42423234), 'g', sigfig = 2)
pretty_SI = function (x,  unit, sigfig=2, sep = ' ') {
breaks <- c(10^c(n = -9, `μ` = -6,  m = -3, 0, k = 3, M = 6, G = 9, T = 12, P = 15, E = 18))
n_suffix <- cut(abs(x), breaks = c(unname(breaks), Inf), labels = c(names(breaks)), right = FALSE)
n_suffix[is.na(n_suffix)] <- ""
suffix <- paste0(sep, n_suffix, unit)
scale <- 1/breaks[n_suffix]
scale[which(scale %in% c(Inf, NA))] <- 1
x <- signif(x * scale, sigfig)
paste0(x, suffix)
}
pretty_SI(c(0.0001011, 5.444e7, 0.0123, 342, 2353234523, 2345, 42423234), 'g', sigfig = 2)
pretty_SI(-5.1e7, 'g C', sigfig = 3)
pretty_SI(-5.1e8, 'g C', sigfig = 3)
df <- data.frame(x = c("a", "b"),
y = c("c", "d"),
z = c("e", "f"))
df
df <- data.frame(x = c("a", "b"),
y = c("c", "d"),
Zones = c("e", "f"))
data2$Zones <- vapply(data2$Zones, paste, collapse = ", ", character(1L))
data2 <- data.frame(x = c("a", "b"),
y = c("c", "d"),
Zones = c("e", "f"))
data2$Zones <- vapply(data2$Zones, paste, collapse = ", ", character(1L))
data2
data2 <- data.frame(x = c("a", "b"),
y = c("c", "d"),
Zones = c("e", "f"))
data2
install.packages(c("agricolae", "arsenal", "backports", "bit", "bit64", "bookdown", "broom", "callr", "car", "ChemoSpec", "chron", "cli", "clipr", "covr", "cowplot", "data.table", "devtools", "digest", "dplyr", "DT", "e1071", "esquisse", "fasterize", "flextable", "foreach", "fs", "ggfittext", "ggforce", "ggpubr", "ggspatial", "glue", "haven", "htmltools", "htmlwidgets", "httpuv", "httr", "igraph", "iterators", "jsonlite", "kableExtra", "knitr", "labeling", "labelled", "later", "lme4", "lmerTest", "lubridate", "lwgeom", "maptools", "multcomp", "mvtnorm", "nloptr", "NLP", "officer", "openssl", "openxlsx", "patchwork", "pillar", "pkgbuild", "processx", "promises", "prospectr", "ps", "quantreg", "questionr", "R.methodsS3", "R.oo", "R.utils", "R6", "raster", "rasterVis", "RcppArmadillo", "readJDX", "readr", "remotes", "rgdal", "rgeos", "rlang", "rmarkdown", "roxygen2", "rstatix", "rvest", "sandwich", "sf", "shiny", "shinyjs", "shinyWidgets", "sp", "stars", "statmod", "stringdist", "stringi", "sys", "systemfonts", "terra", "tibble", "tidyr", "tikzDevice", "tinytex", "unglue", "units", "usethis", "V8", "vctrs", "withr", "xfun", "zip"))
install.packages("DescTools")
library(DescTools)
MedianCI
MedianCI_Binom
DescTools::MedianCI_Binom
DescTools:::MedianCI_Binom
cut (1:13,3)
(1:13) %% 3
(1:13) %/% 3
(1:13) %/% 3 + 1
(1:12) %/% 3 + 1
(1:12 -1) %/% 3 + 1
(1:13 -1) %/% 3 + 1
rep(1:5, each=ceiling(13/5))
rep(1:5, each=ceiling(13/5))[1:13]
set.seed(1)
A=matrix(rnorm(10000),100)
sumcols = lapply(seq_len(NCOL(A)-n), function(j){
rowSums(A[, seq.int(j,j+3)])
})
n=3
sumcols = lapply(seq_len(NCOL(A)-n), function(j){
rowSums(A[, seq.int(j,j+3)])
})
sumcols
A
sumcols = lapply(seq_len(NCOL(A)-n), function(j){
rowSums(A[, seq.int(j:j+3)])
})
sumcols
sumcols = lapply(seq_len(NCOL(A)-n), function(j){
rowSums(A[, seq.int(j:(j+3))])
})
sumcols
sumcols = sapply(seq_len(NCOL(A)-n), function(j){
rowSums(A[, seq.int(j:(j+3))])
})
sumcols
A
sumcols
set.seed(1)
A = matrix(rnorm(100),10)
n=3
sumcols = lapply(seq_len(NCOL(A)-n), function(j){
rowSums(A[, seq.int(j, j+3)])
})
sumcols
sumcols = sapply(seq_len(NCOL(A)-n), function(j){
rowSums(A[, seq.int(j:(j+3))])
})
sumcols
A
sumcols = sapply(seq_len(NCOL(A)-n), function(j){
(A[, seq.int(j:(j+3))])
})
sumcols
sumcols = sapply(seq_len(NCOL(A)-n), function(j){
( seq.int(j:(j+3)))
})
sumcols
NCOL(A)-n
seq_len(NCOL(A)-n)
sumcols = sapply(seq_len(NCOL(A)-n), function(j){
(j))
})
(j)
sumcols = sapply(seq_len(NCOL(A)-n), function(j){
(j)
})
sumcols
sumcols = sapply(seq_len(NCOL(A)-n), function(j){
( seq.int(j:(j+3)))
})
sumcols
sumcols = sapply(seq_len(NCOL(A)-n), function(j){
rowSums(A[, seq.int(j:(j+3))])
})
sumcols = sapply(seq_len(NCOL(A)-n), function(j){
( j:(j+3))
})
sumcols
sumcols = sapply(seq_len(NCOL(A)-n), function(j){
rowSums(A[, j:(j+3)])
})
sumcols
A
sumcols = sapply(seq_len(NCOL(A)-n), function(j){
(A[, j:(j+3)])
})
sumcols
sumcols = lapply(seq_len(NCOL(A)-n), function(j){
(A[, j:(j+3)])
})
sumcols
sumcols = lapply(seq_len(NCOL(A)-n), function(j){
(A[, j:(j+n-1)])
})
sumcols
A
sumcols = lapply(seq_len(NCOL(A)-n), function(j){
rowSums(A[, j:(j+n-1)])
})
sumcols
sumcols = sapply(seq_len(NCOL(A)-n), function(j){
rowSums(A[, j:(j+n-1)])
})
sumcols
sumcols = sapply(seq_len(NCOL(A)), function(j){
rowSums(A[, j:(j+n-1)])
})
A[1,12]
A
sumcols = sapply(seq_len(NCOL(A)-n+1), function(j){
rowSums(A[, j:(j+n-1)])
})
sumcols
sapply(seq_len(NCOL(A)-n+1), function(j){
rowSums(A[, j:(j+n-1)])
})
apply(A, 1, zoo::rollsumr, 3, fill = NA)
install.packages(c("zoo", "roll"))
set.seed(1)
A = matrix(rnorm(100),10)
n=3
sapply(seq_len(NCOL(A)-n+1), function(j){
rowSums(A[, j:(j+n-1)])
})
apply(A, 1, zoo::rollsumr, 3, fill = NA)
A <- matrix(1:10, ncol = 5)
sapply(seq_len(NCOL(A)-n+1), function(j){
rowSums(A[, j:(j+n-1)])
})
apply(A, 1, zoo::rollsumr, 3, fill = NA)
t(apply(A, 1, zoo::rollsumr, 3, fill = NA))
zoo::rollsumr
zoo::rollsum
out = matrix(NA_real_, nrow(A), ncol(A))
for (i in seq_len(nrow(A))) {
out[i, ] = roll::roll_sum(A[i, ], 3L)
}
out
sapply(seq_len(NCOL(A)-n+1), function(j){
rowSums(A[, j:(j+n-1)])
})
sapply(seq_len(NCOL(A)), function(j){
length(j) = n
rowSums(A[, j:(j+n-1)])
})
sapply(seq_len(NCOL(A)-n+1), function(j){
cols = j:(j+n-1)
length(cols) = n
rowSums(A[, cols])
})
Rcpp::cppFunction("
NumericMatrix rcpp_column_roll(const NumericMatrix mat, const int n) {
const int ncol = mat.ncol();
const int nrow = mat.nrow();
NumericMatrix out(nrow, ncol);
std::fill( out.begin(), out.end(), NumericVector::get_na() ) ;
for (int i = 0; i < nrow; i++) {
NumericVector window(n);
double roll = 0;
int oldest_ind = 0;
for (int j = 0; j < n ; j++) {
double mat_ij = mat(i, j);
window(j) = mat_ij;
roll += mat_ij;
}
out(i, n - 1) = roll;
for (int j = n; j < ncol; j ++) {
double mat_ij = mat(i, j);
roll += mat_ij;
roll -= window(oldest_ind);
out(i, j) = roll;
window(oldest_ind) = mat_ij;
if (oldest_ind == n-1) oldest_ind = 0; else oldest_ind++;
}
}
return(out);
}
")
library(microbenchmark)
install.packages("microbenchmark")
A=matrix(rnorm(10000),100)
library(microbenchmark)
microbenchmark(
rcpp_column_roll(A, 3),
sapply(seq_len(NCOL(A)-n+1), function(j) rowSums(A[, j:(j+n-1)]))
)
rcpp_column_roll(A, 3)
sapply(seq_len(NCOL(A)-n+1), function(j) rowSums(A[, j:(j+n-1)]))
A=matrix(rnorm(1E7),100)
microbenchmark(
rcpp_column_roll(A, 3),
sapply(seq_len(NCOL(A)-n+1), function(j) rowSums(A[, j:(j+n-1)]))
)
A=matrix(rnorm(1E6),100)
microbenchmark(
rcpp_column_roll(A, 3),
sapply(seq_len(NCOL(A)-n+1), function(j) rowSums(A[, j:(j+n-1)]))
)
library(data.table)
dt <- data.table(V0 =LETTERS[c(1,1,2,2,3)], V1=1:5, V2=3:7, V3=5:1)
f1 <- function(dt){
dt[, rowpos := .I]
dt[ ,  sdd := rowSums(.SD[, 2:4]), by = rowpos ] }
f2 <- function(dt){dt[, sdd := rowSums(dt[, 2:4])]}
library(microbenchmark)
microbenchmark(f1(dt),f2(dt))
f2(dt)
f2(dt)[]
f2 <- function(dt){dt[, sdd := rowSums(.SD), .SDCols= 2:4]}
f2(dt)[]
f2 <- function(dt){dt[, sdd := rowSums(.SD), .SDcols= 2:4]}
f2(dt)[]
f1 <- function(dt){
dt[, rowpos := .I]
dt[ ,  sdd := rowSums(.SD[, 2:4]), by = rowpos ] }
f2 <- function(dt){dt[, sdd := rowSums(dt[, 2:4])]}
f3 <- function(dt){dt[, sdd := rowSums(.SD), .SDcols= 2:4]}
microbenchmark(f1(dt),f2(dt), f3(dt))
microbenchmark(f1(dt),f2(dt), f3(dt))
microbenchmark(f1(dt),f2(dt), f3(dt), times = 1e4)
f2(dt)[]
f3(dt)[]
dt <- data.table(V0 =LETTERS[c(1,1,2,2,3)], V1=1:5, V2=3:7, V3=5:1)
f2(dt)[]
f3(dt)[]
dt <- data.table(V0 = rep(LETTERS[c(1,1,2,2,3)], 1e3), V1=1:5, V2=3:7, V3=5:1)
f.rowpos <- function() {
dt[, rowpos := .I]
dt[,  sdd := sum(.SD[, 2:4]), by = rowpos ]
}
f.nrow <- function() {
dt[, sdd := sum(.SD[, 2:4]), by = seq_len(NROW(dt)) ]
}
f.forset<- function() {
for (i in seq_len(NROW(dt))) set(dt, i, 'sdd', sum(dt[i, 2:4]))
}
microbenchmark(f.rowpos(),f.nrow(), f.forset(), times = 100)
microbenchmark(f.rowpos(),f.nrow(), f.forset(), times = 10)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE)
ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE)
ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE)
library(ggplot2)
ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE)
library(ggplot2)
ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE)
ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE)
ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE)
setwd("~/git/nets1")
